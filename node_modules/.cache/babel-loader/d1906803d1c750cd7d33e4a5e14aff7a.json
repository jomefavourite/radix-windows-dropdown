{"ast":null,"code":"import * as e from \"react\";\nvar t = 0;\nexport function FocusGuards(e) {\n  return useFocusGuards(), e.children;\n}\nexport function useFocusGuards() {\n  e.useEffect(function () {\n    var e, n;\n    var r = document.querySelectorAll(\"[data-radix-focus-guard]\");\n    return document.body.insertAdjacentElement(\"afterbegin\", null !== (e = r[0]) && void 0 !== e ? e : o()), document.body.insertAdjacentElement(\"beforeend\", null !== (n = r[1]) && void 0 !== n ? n : o()), t++, function () {\n      1 === t && document.querySelectorAll(\"[data-radix-focus-guard]\").forEach(function (e) {\n        return e.remove();\n      }), t--;\n    };\n  }, []);\n}\n\nfunction o() {\n  var e = document.createElement(\"span\");\n  return e.setAttribute(\"data-radix-focus-guard\", \"\"), e.tabIndex = 0, e.style.cssText = \"outline: none; opacity: 0; position: fixed; pointer-events: none\", e;\n}\n\nexport var Root = FocusGuards;","map":{"version":3,"sources":["packages/react/focus-guards/src/FocusGuards.tsx"],"names":["count","FocusGuards","props","useFocusGuards","children","React","useEffect","edgeGuards","document","querySelectorAll","body","insertAdjacentElement","createFocusGuard","forEach","node","remove","element","createElement","setAttribute","tabIndex","style","cssText","Root"],"mappings":";AAGA,IAAIA,CAAAA,GAAQ,CAAZ;AAAY,OAEZ,SAASC,WAAT,CAAqBC,CAArB,EAAqBA;EAEnB,OADAC,cAAAA,IACOD,CAAAA,CAAME,QAAb;AAAaA;AAAAA,OAOf,SAASD,cAAT,GAASA;EACPE,CAAAA,CAAMC,SAAND,CAAgB,YAAA;IAAM,IAAA,CAAA,EAAA,CAAA;IACpB,IAAME,CAAAA,GAAaC,QAAAA,CAASC,gBAATD,CAA0B,0BAA1BA,CAAnB;IAKA,OAJAA,QAAAA,CAASE,IAATF,CAAcG,qBAAdH,CAAoC,YAApCA,EAAAA,UAAAA,CAAAA,GAAkDD,CAAAA,CAAW,CAAXA,CAAlDC,KAA6D,KAA7DA,CAA6D,KAA7DA,CAAAA,GAAAA,CAAAA,GAAmEI,CAAAA,EAAnEJ,GACAA,QAAAA,CAASE,IAATF,CAAcG,qBAAdH,CAAoC,WAApCA,EAAAA,UAAAA,CAAAA,GAAiDD,CAAAA,CAAW,CAAXA,CAAjDC,KAA4D,KAA5DA,CAA4D,KAA5DA,CAAAA,GAAAA,CAAAA,GAAkEI,CAAAA,EAAlEJ,CADAA,EAEAR,CAAAA,EAFAQ,EAIO,YAAA;MACS,MAAVR,CAAU,IACZQ,QAAAA,CAASC,gBAATD,CAA0B,0BAA1BA,EAAsDK,OAAtDL,CAA+DM,UAAAA,CAAAA;QAAAA,OAASA,CAAAA,CAAKC,MAALD,EAATA;MAAAA,CAA/DN,CADY,EAGdR,CAAAA,EAHc;IAGdA,CAJF;EAIEA,CAVJK,EAYG,EAZHA;AAeF;;AAAA,SAASO,CAAT,GAASA;EACP,IAAMI,CAAAA,GAAUR,QAAAA,CAASS,aAATT,CAAuB,MAAvBA,CAAhB;EAIA,OAHAQ,CAAAA,CAAQE,YAARF,CAAqB,wBAArBA,EAA+C,EAA/CA,GACAA,CAAAA,CAAQG,QAARH,GAAmB,CADnBA,EAEAA,CAAAA,CAAQI,KAARJ,CAAcK,OAAdL,GAAwB,kEAFxBA,EAGOA,CAAP;AAAOA;;AAAAA,OAGT,IAAMM,IAAAA,GAAOrB,WAAb","sourcesContent":["import * as React from 'react';\n\n/** Number of components which have requested interest to have focus guards */\nlet count = 0;\n\nfunction FocusGuards(props: any) {\n  useFocusGuards();\n  return props.children;\n}\n\n/**\n * Injects a pair of focus guards at the edges of the whole DOM tree\n * to ensure `focusin` & `focusout` events can be caught consistently.\n */\nfunction useFocusGuards() {\n  React.useEffect(() => {\n    const edgeGuards = document.querySelectorAll('[data-radix-focus-guard]');\n    document.body.insertAdjacentElement('afterbegin', edgeGuards[0] ?? createFocusGuard());\n    document.body.insertAdjacentElement('beforeend', edgeGuards[1] ?? createFocusGuard());\n    count++;\n\n    return () => {\n      if (count === 1) {\n        document.querySelectorAll('[data-radix-focus-guard]').forEach((node) => node.remove());\n      }\n      count--;\n    };\n  }, []);\n}\n\nfunction createFocusGuard() {\n  const element = document.createElement('span');\n  element.setAttribute('data-radix-focus-guard', '');\n  element.tabIndex = 0;\n  element.style.cssText = 'outline: none; opacity: 0; position: fixed; pointer-events: none';\n  return element;\n}\n\nconst Root = FocusGuards;\n\nexport {\n  FocusGuards,\n  //\n  Root,\n  //\n  useFocusGuards,\n};\n"]},"metadata":{},"sourceType":"module"}