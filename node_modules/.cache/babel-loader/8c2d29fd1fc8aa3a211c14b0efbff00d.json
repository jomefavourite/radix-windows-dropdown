{"ast":null,"code":"import _objectSpread from \"/project/radix-windows-dropdown/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/project/radix-windows-dropdown/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"/project/radix-windows-dropdown/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"disableOutsidePointerEvents\", \"onEscapeKeyDown\", \"onPointerDownOutside\", \"onFocusOutside\", \"onInteractOutside\", \"onDismiss\"];\nimport { useEscapeKeydown as e } from \"@radix-ui/react-use-escape-keydown\";\nimport { useCallbackRef as t } from \"@radix-ui/react-use-callback-ref\";\nimport { useBodyPointerEvents as n } from \"@radix-ui/react-use-body-pointer-events\";\nimport { createContext as r } from \"@radix-ui/react-context\";\nimport { Primitive as o } from \"@radix-ui/react-primitive\";\nimport { composeEventHandlers as u } from \"@radix-ui/primitive\";\nimport * as i from \"react\";\nimport s from \"@babel/runtime/helpers/esm/extends\";\n\nvar _C = C(),\n    _C2 = _slicedToArray(_C, 2),\n    a = _C2[0],\n    c = _C2[1],\n    _b = b(),\n    _b2 = _slicedToArray(_b, 2),\n    l = _b2[0],\n    d = _b2[1],\n    _C3 = C(\"TotalLayerCountWithDisabledOutsidePointerEventsProvider\"),\n    _C4 = _slicedToArray(_C3, 2),\n    m = _C4[0],\n    f = _C4[1],\n    _b3 = b(\"RunningLayerCountWithDisabledOutsidePointerEventsProvider\"),\n    _b4 = _slicedToArray(_b3, 2),\n    p = _b4[0],\n    v = _b4[1];\n\nexport var DismissableLayer = /*#__PURE__*/i.forwardRef(function (e, t) {\n  var n = 0 === d(),\n      r = /*#__PURE__*/i.createElement(E, s({}, e, {\n    ref: t\n  }));\n  return n ? /*#__PURE__*/i.createElement(a, null, /*#__PURE__*/i.createElement(m, null, r)) : r;\n});\n/*#__PURE__*/\n\nvar E = /*#__PURE__*/i.forwardRef(function (r, a) {\n  var _r$disableOutsidePoin = r.disableOutsidePointerEvents,\n      m = _r$disableOutsidePoin === void 0 ? !1 : _r$disableOutsidePoin,\n      E = r.onEscapeKeyDown,\n      C = r.onPointerDownOutside,\n      b = r.onFocusOutside,\n      w = r.onInteractOutside,\n      L = r.onDismiss,\n      y = _objectWithoutProperties(r, _excluded),\n      D = c(),\n      P = d() + 1,\n      T = P === D,\n      g = f(m),\n      x = v() + (m ? 1 : 0),\n      O = x < g;\n\n  n({\n    disabled: m\n  }), e(function (e) {\n    T && (null == E || E(e), e.defaultPrevented || null == L || L());\n  });\n\n  var _ref = function (e) {\n    var n = t(e),\n        r = i.useRef(!1);\n    return i.useEffect(function () {\n      var e = function e(_e) {\n        var t = _e.target;\n\n        if (t && !r.current) {\n          var _r = new CustomEvent(\"dismissableLayer.pointerDownOutside\", {\n            bubbles: !1,\n            cancelable: !0,\n            detail: {\n              originalEvent: _e\n            }\n          });\n\n          t.addEventListener(\"dismissableLayer.pointerDownOutside\", n, {\n            once: !0\n          }), t.dispatchEvent(_r);\n        }\n\n        r.current = !1;\n      },\n          t = window.setTimeout(function () {\n        document.addEventListener(\"pointerdown\", e);\n      }, 0);\n\n      return function () {\n        window.clearTimeout(t), document.removeEventListener(\"pointerdown\", e);\n      };\n    }, [n]), {\n      onPointerDownCapture: function onPointerDownCapture() {\n        return r.current = !0;\n      }\n    };\n  }(function (e) {\n    O || (null == C || C(e), null == w || w(e), e.defaultPrevented || null == L || L());\n  }),\n      R = _ref.onPointerDownCapture,\n      _ref2 = function (e) {\n    var n = t(e),\n        r = i.useRef(!1);\n    return i.useEffect(function () {\n      var e = function e(_e2) {\n        var t = _e2.target;\n\n        if (t && !r.current) {\n          var _r2 = new CustomEvent(\"dismissableLayer.focusOutside\", {\n            bubbles: !1,\n            cancelable: !0,\n            detail: {\n              originalEvent: _e2\n            }\n          });\n\n          t.addEventListener(\"dismissableLayer.focusOutside\", n, {\n            once: !0\n          }), t.dispatchEvent(_r2);\n        }\n      };\n\n      return document.addEventListener(\"focusin\", e), function () {\n        return document.removeEventListener(\"focusin\", e);\n      };\n    }, [n]), {\n      onFocusCapture: function onFocusCapture() {\n        return r.current = !0;\n      },\n      onBlurCapture: function onBlurCapture() {\n        return r.current = !1;\n      }\n    };\n  }(function (e) {\n    null == b || b(e), null == w || w(e), e.defaultPrevented || null == L || L();\n  }),\n      h = _ref2.onBlurCapture,\n      F = _ref2.onFocusCapture,\n      k = g > 0 && !O;\n  /*#__PURE__*/\n\n\n  return i.createElement(l, {\n    runningCount: P\n  }, /*#__PURE__*/i.createElement(p, {\n    runningCount: x\n  }, /*#__PURE__*/i.createElement(o.div, s({}, y, {\n    ref: a,\n    style: _objectSpread({\n      pointerEvents: k ? \"auto\" : void 0\n    }, y.style),\n    onPointerDownCapture: u(r.onPointerDownCapture, R),\n    onBlurCapture: u(r.onBlurCapture, h),\n    onFocusCapture: u(r.onFocusCapture, F)\n  }))));\n});\n\nfunction C(e) {\n  var _r3 = r(\"TotalLayerCount\", {\n    total: 0,\n    onTotalIncrease: function onTotalIncrease() {},\n    onTotalDecrease: function onTotalDecrease() {}\n  }),\n      _r4 = _slicedToArray(_r3, 2),\n      t = _r4[0],\n      n = _r4[1],\n      o = function o(_ref3) {\n    var e = _ref3.children;\n\n    var _i$useState = i.useState(0),\n        _i$useState2 = _slicedToArray(_i$useState, 2),\n        n = _i$useState2[0],\n        r = _i$useState2[1];\n    /*#__PURE__*/\n\n\n    return i.createElement(t, {\n      total: n,\n      onTotalIncrease: i.useCallback(function () {\n        return r(function (e) {\n          return e + 1;\n        });\n      }, []),\n      onTotalDecrease: i.useCallback(function () {\n        return r(function (e) {\n          return e - 1;\n        });\n      }, [])\n    }, e);\n  };\n\n  return [o, function () {\n    var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !0;\n\n    var _n = n(\"TotalLayerCountConsumer\"),\n        t = _n.total,\n        r = _n.onTotalIncrease,\n        o = _n.onTotalDecrease;\n\n    return i.useLayoutEffect(function () {\n      if (e) return r(), function () {\n        return o();\n      };\n    }, [e, r, o]), t;\n  }];\n}\n\nfunction b(e) {\n  var _r5 = r(\"RunningLayerCount\", {\n    count: 0\n  }),\n      _r6 = _slicedToArray(_r5, 2),\n      t = _r6[0],\n      n = _r6[1],\n      o = function o(e) {\n    var n = e.children,\n        r = e.runningCount;\n    /*#__PURE__*/\n\n    return i.createElement(t, {\n      count: r\n    }, n);\n  };\n\n  return [o, function () {\n    return n(\"RunningLayerCountConsumer\").count || 0;\n  }];\n}\n\nexport var Root = DismissableLayer;","map":{"version":3,"sources":["packages/react/dismissable-layer/src/DismissableLayer.tsx"],"names":["TotalLayerCountProvider","useTotalLayerCount","createTotalLayerCount","RunningLayerCountProvider","usePreviousRunningLayerCount","createRunningLayerCount","TotalLayerCountWithDisabledOutsidePointerEventsProvider","useTotalLayerCountWithDisabledOutsidePointerEvents","RunningLayerCountWithDisabledOutsidePointerEventsProvider","usePreviousRunningLayerCountWithDisabledOutsidePointerEvents","DismissableLayer","React","forwardRef","props","forwardedRef","isRootLayer","layer","_react","$b3ca5e0c42ec5d7395c8cb24157$var$DismissableLayerImpl","ref","$b3ca5e0c42ec5d7395c8cb24157$var$TotalLayerCountProvider","$b3ca5e0c42ec5d7395c8cb24157$var$TotalLayerCountWithDisabledOutsidePointerEventsProvider","DismissableLayerImpl","disableOutsidePointerEvents","onEscapeKeyDown","onPointerDownOutside","onFocusOutside","onInteractOutside","onDismiss","layerProps","totalLayerCount","runningLayerCount","isDeepestLayer","totalLayerCountWithDisabledOutsidePointerEvents","runningLayerCountWithDisabledOutsidePointerEvents","containsChildLayerWithDisabledOutsidePointerEvents","useBodyPointerEvents","disabled","useEscapeKeydown","event","defaultPrevented","onPointerDownCapture","handlePointerDownCapture","usePointerDownOutside","onBlurCapture","handleBlurCapture","onFocusCapture","handleFocusCapture","useFocusOutside","shouldReEnablePointerEvents","$b3ca5e0c42ec5d7395c8cb24157$var$RunningLayerCountProvider","runningCount","$b3ca5e0c42ec5d7395c8cb24157$var$RunningLayerCountWithDisabledOutsidePointerEventsProvider","Primitive","div","style","pointerEvents","undefined","composeEventHandlers","handlePointerDownOutside","useCallbackRef","isPointerInsideReactTreeRef","useRef","useEffect","handlePointerDown","target","current","pointerDownOutsideEvent","CustomEvent","bubbles","cancelable","detail","originalEvent","addEventListener","once","dispatchEvent","timerId","window","setTimeout","document","clearTimeout","removeEventListener","handleFocusOutside","isFocusInsideReactTreeRef","handleFocus","focusOutsideEvent","displayName","TotalLayerCountProviderImpl","useTotalLayerCountContext","createContext","total","onTotalIncrease","onTotalDecrease","children","setTotal","useState","useCallback","n","counted","useLayoutEffect","RunningLayerCountProviderImp","useRunningLayerCount","count","Root"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { createContext } from '@radix-ui/react-context';\nimport { useBodyPointerEvents } from '@radix-ui/react-use-body-pointer-events';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useEscapeKeydown } from '@radix-ui/react-use-escape-keydown';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\n// We need to compute the total count of layers AND a running count of all layers\n// in order to find which layer is the deepest one.\n// This is use to only dismiss the deepest layer when using the escape key\n// because we bind the key listener to document so cannot take advantage of event.stopPropagation()\nconst [TotalLayerCountProvider, useTotalLayerCount] = createTotalLayerCount();\nconst [RunningLayerCountProvider, usePreviousRunningLayerCount] = createRunningLayerCount();\n\n// We need to compute the total count of layers which set `disableOutsidePointerEvents` to `true` AND\n// a running count of all the layers which set `disableOutsidePointerEvents` to `true` in order to determine\n// which layers should be dismissed when interacting outside.\n// (ie. all layers that do not have a child layer which sets `disableOutsidePointerEvents` to `true`)\nconst [\n  TotalLayerCountWithDisabledOutsidePointerEventsProvider,\n  useTotalLayerCountWithDisabledOutsidePointerEvents,\n] = createTotalLayerCount('TotalLayerCountWithDisabledOutsidePointerEventsProvider');\nconst [\n  RunningLayerCountWithDisabledOutsidePointerEventsProvider,\n  usePreviousRunningLayerCountWithDisabledOutsidePointerEvents,\n] = createRunningLayerCount('RunningLayerCountWithDisabledOutsidePointerEventsProvider');\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayer\n * -----------------------------------------------------------------------------------------------*/\n\nconst DISMISSABLE_LAYER_NAME = 'DismissableLayer';\n\ntype DismissableLayerElement = DismissableLayerImplElement;\ninterface DismissableLayerProps extends DismissableLayerImplProps {}\n\nconst DismissableLayer = React.forwardRef<DismissableLayerElement, DismissableLayerProps>(\n  (props, forwardedRef) => {\n    const runningLayerCount = usePreviousRunningLayerCount();\n    const isRootLayer = runningLayerCount === 0;\n    const layer = <DismissableLayerImpl {...props} ref={forwardedRef} />;\n\n    // if it's the root layer, we wrap it with our necessary root providers\n    // (effectively we wrap the whole tree of nested layers)\n    return isRootLayer ? (\n      <TotalLayerCountProvider>\n        <TotalLayerCountWithDisabledOutsidePointerEventsProvider>\n          {layer}\n        </TotalLayerCountWithDisabledOutsidePointerEventsProvider>\n      </TotalLayerCountProvider>\n    ) : (\n      layer\n    );\n  }\n);\n\nDismissableLayer.displayName = DISMISSABLE_LAYER_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DismissableLayerImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DismissableLayerImplProps extends PrimitiveDivProps {\n  /**\n   * When `true`, hover/focus/click interactions will be disabled on elements outside\n   * the `DismissableLayer`. Users will need to click twice on outside elements to\n   * interact with them: once to close the `DismissableLayer`, and again to trigger the element.\n   */\n  disableOutsidePointerEvents?: boolean;\n\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: (event: KeyboardEvent) => void;\n\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void;\n\n  /**\n   * Event handler called when the focus moves outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onFocusOutside?: (event: FocusOutsideEvent) => void;\n\n  /**\n   * Event handler called when an interaction happens outside the `DismissableLayer`.\n   * Specifically, when a `pointerdown` event happens outside or focus moves outside of it.\n   * Can be prevented.\n   */\n  onInteractOutside?: (event: PointerDownOutsideEvent | FocusOutsideEvent) => void;\n\n  /** Callback called when the `DismissableLayer` should be dismissed */\n  onDismiss?: () => void;\n}\n\nconst DismissableLayerImpl = React.forwardRef<\n  DismissableLayerImplElement,\n  DismissableLayerImplProps\n>((props, forwardedRef) => {\n  const {\n    disableOutsidePointerEvents = false,\n    onEscapeKeyDown,\n    onPointerDownOutside,\n    onFocusOutside,\n    onInteractOutside,\n    onDismiss,\n    ...layerProps\n  } = props;\n\n  const totalLayerCount = useTotalLayerCount();\n  const prevRunningLayerCount = usePreviousRunningLayerCount();\n  const runningLayerCount = prevRunningLayerCount + 1;\n  const isDeepestLayer = runningLayerCount === totalLayerCount;\n\n  const totalLayerCountWithDisabledOutsidePointerEvents =\n    useTotalLayerCountWithDisabledOutsidePointerEvents(disableOutsidePointerEvents);\n  const prevRunningLayerCountWithDisabledOutsidePointerEvents =\n    usePreviousRunningLayerCountWithDisabledOutsidePointerEvents();\n  const runningLayerCountWithDisabledOutsidePointerEvents =\n    prevRunningLayerCountWithDisabledOutsidePointerEvents + (disableOutsidePointerEvents ? 1 : 0);\n  const containsChildLayerWithDisabledOutsidePointerEvents =\n    runningLayerCountWithDisabledOutsidePointerEvents <\n    totalLayerCountWithDisabledOutsidePointerEvents;\n\n  // Disable pointer-events on `document.body` when at least one layer is disabling outside pointer events\n  useBodyPointerEvents({ disabled: disableOutsidePointerEvents });\n\n  // Dismiss on escape\n  useEscapeKeydown((event) => {\n    // Only dismiss if it's the deepest layer. his is effectively mimicking\n    // event.stopPropagation from the layer with disabled outside pointer events.\n    if (isDeepestLayer) {\n      onEscapeKeyDown?.(event);\n      if (!event.defaultPrevented) {\n        onDismiss?.();\n      }\n    }\n  });\n\n  // Dismiss on pointer down outside\n  const { onPointerDownCapture: handlePointerDownCapture } = usePointerDownOutside((event) => {\n    // Only dismiss if there's no deeper layer which disabled pointer events outside itself\n    if (!containsChildLayerWithDisabledOutsidePointerEvents) {\n      onPointerDownOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) {\n        onDismiss?.();\n      }\n    }\n  });\n\n  // Dismiss on focus outside\n  const { onBlurCapture: handleBlurCapture, onFocusCapture: handleFocusCapture } = useFocusOutside(\n    (event) => {\n      onFocusOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) {\n        onDismiss?.();\n      }\n    }\n  );\n\n  // If we have disabled pointer events on body, we need to reset `pointerEvents: 'auto'`\n  // on some layers. This depends on which layers set `disableOutsidePointerEvents` to `true`.\n  //\n  // NOTE: it's important we set it on ALL layers that need it as we cannot simply\n  // set it on the deepest layer which sets `disableOutsidePointerEvents` to `true` and rely\n  // on inheritence. This is because layers may be rendered in different portals where\n  // inheritence wouldn't apply, so we need to set it explicity on its children too.\n  const isBodyPointerEventsDisabled = totalLayerCountWithDisabledOutsidePointerEvents > 0;\n  const shouldReEnablePointerEvents =\n    isBodyPointerEventsDisabled && !containsChildLayerWithDisabledOutsidePointerEvents;\n\n  return (\n    <RunningLayerCountProvider runningCount={runningLayerCount}>\n      <RunningLayerCountWithDisabledOutsidePointerEventsProvider\n        runningCount={runningLayerCountWithDisabledOutsidePointerEvents}\n      >\n        <Primitive.div\n          {...layerProps}\n          ref={forwardedRef}\n          style={{\n            pointerEvents: shouldReEnablePointerEvents ? 'auto' : undefined,\n            ...layerProps.style,\n          }}\n          onPointerDownCapture={composeEventHandlers(\n            props.onPointerDownCapture,\n            handlePointerDownCapture\n          )}\n          onBlurCapture={composeEventHandlers(props.onBlurCapture, handleBlurCapture)}\n          onFocusCapture={composeEventHandlers(props.onFocusCapture, handleFocusCapture)}\n        />\n      </RunningLayerCountWithDisabledOutsidePointerEventsProvider>\n    </RunningLayerCountProvider>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * Utility hooks\n * -----------------------------------------------------------------------------------------------*/\n\nconst POINTER_DOWN_OUTSIDE = 'dismissableLayer.pointerDownOutside';\nconst FOCUS_OUTSIDE = 'dismissableLayer.focusOutside';\ntype PointerDownOutsideEvent = CustomEvent<{ originalEvent: PointerEvent }>;\ntype FocusOutsideEvent = CustomEvent<{ originalEvent: FocusEvent }>;\n\n/**\n * Sets up `pointerdown` listener which listens for events outside a react subtree.\n *\n * We use `pointerdown` rather than `pointerup` to mimic layer dismissing behaviour\n * present in OS which usually happens on `pointerdown`.\n *\n * Returns props to pass to the node we want to check for outside events.\n */\n\nfunction usePointerDownOutside(onPointerDownOutside?: (event: PointerDownOutsideEvent) => void) {\n  const handlePointerDownOutside = useCallbackRef(onPointerDownOutside) as EventListener;\n  const isPointerInsideReactTreeRef = React.useRef(false);\n\n  React.useEffect(() => {\n    const handlePointerDown = (event: PointerEvent) => {\n      const target = event.target;\n      if (target && !isPointerInsideReactTreeRef.current) {\n        const pointerDownOutsideEvent: PointerDownOutsideEvent = new CustomEvent(\n          POINTER_DOWN_OUTSIDE,\n          { bubbles: false, cancelable: true, detail: { originalEvent: event } }\n        );\n        target.addEventListener(POINTER_DOWN_OUTSIDE, handlePointerDownOutside, { once: true });\n        target.dispatchEvent(pointerDownOutsideEvent);\n      }\n      isPointerInsideReactTreeRef.current = false;\n    };\n    /**\n     * if this hook executes in a component that mounts via a `pointerdown` event, the event\n     * would bubble up to the document and trigger a `pointerDownOutside` event. We avoid\n     * this by delaying the event listener registration on the document.\n     * This is not React specific, but rather how the DOM works, ie:\n     * ```\n     * button.addEventListener('pointerdown', () => {\n     *   console.log('I will log');\n     *   document.addEventListener('pointerdown', () => {\n     *     console.log('I will also log');\n     *   })\n     * });\n     */\n    const timerId = window.setTimeout(() => {\n      document.addEventListener('pointerdown', handlePointerDown);\n    }, 0);\n    return () => {\n      window.clearTimeout(timerId);\n      document.removeEventListener('pointerdown', handlePointerDown);\n    };\n  }, [handlePointerDownOutside]);\n\n  return {\n    // ensures we check React component tree (not just DOM tree)\n    onPointerDownCapture: () => (isPointerInsideReactTreeRef.current = true),\n  };\n}\n\n/**\n * Listens for when focus happens outside a react subtree.\n * Returns props to pass to the root (node) of the subtree we want to check.\n */\n\nfunction useFocusOutside(onFocusOutside?: (event: FocusOutsideEvent) => void) {\n  const handleFocusOutside = useCallbackRef(onFocusOutside) as EventListener;\n  const isFocusInsideReactTreeRef = React.useRef(false);\n\n  React.useEffect(() => {\n    const handleFocus = (event: FocusEvent) => {\n      const target = event.target;\n      if (target && !isFocusInsideReactTreeRef.current) {\n        const focusOutsideEvent: FocusOutsideEvent = new CustomEvent(FOCUS_OUTSIDE, {\n          bubbles: false,\n          cancelable: true,\n          detail: { originalEvent: event },\n        });\n        target.addEventListener(FOCUS_OUTSIDE, handleFocusOutside, { once: true });\n        target.dispatchEvent(focusOutsideEvent);\n      }\n    };\n    document.addEventListener('focusin', handleFocus);\n    return () => document.removeEventListener('focusin', handleFocus);\n  }, [handleFocusOutside]);\n\n  return {\n    onFocusCapture: () => (isFocusInsideReactTreeRef.current = true),\n    onBlurCapture: () => (isFocusInsideReactTreeRef.current = false),\n  };\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Layer counting utilities\n * -----------------------------------------------------------------------------------------------*/\n\nfunction createTotalLayerCount(displayName?: string) {\n  const [TotalLayerCountProviderImpl, useTotalLayerCountContext] = createContext(\n    'TotalLayerCount',\n    { total: 0, onTotalIncrease: () => {}, onTotalDecrease: () => {} }\n  );\n\n  const TotalLayerCountProvider: React.FC = ({ children }) => {\n    const [total, setTotal] = React.useState(0);\n    return (\n      <TotalLayerCountProviderImpl\n        total={total}\n        onTotalIncrease={React.useCallback(() => setTotal((n) => n + 1), [])}\n        onTotalDecrease={React.useCallback(() => setTotal((n) => n - 1), [])}\n      >\n        {children}\n      </TotalLayerCountProviderImpl>\n    );\n  };\n  if (displayName) {\n    TotalLayerCountProvider.displayName = displayName;\n  }\n\n  function useTotalLayerCount(counted = true) {\n    const { total, onTotalIncrease, onTotalDecrease } =\n      useTotalLayerCountContext('TotalLayerCountConsumer');\n\n    React.useLayoutEffect(() => {\n      if (counted) {\n        onTotalIncrease();\n        return () => onTotalDecrease();\n      }\n    }, [counted, onTotalIncrease, onTotalDecrease]);\n\n    return total;\n  }\n\n  return [TotalLayerCountProvider, useTotalLayerCount] as const;\n}\n\nfunction createRunningLayerCount(displayName?: string) {\n  const [RunningLayerCountProviderImp, useRunningLayerCount] = createContext('RunningLayerCount', {\n    count: 0,\n  });\n\n  const RunningLayerCountProvider: React.FC<{ runningCount: number }> = (props) => {\n    const { children, runningCount } = props;\n    return (\n      <RunningLayerCountProviderImp count={runningCount}>{children}</RunningLayerCountProviderImp>\n    );\n  };\n  if (displayName) {\n    RunningLayerCountProvider.displayName = displayName;\n  }\n\n  function usePreviousRunningLayerCount() {\n    const context = useRunningLayerCount('RunningLayerCountConsumer');\n    return context.count || 0;\n  }\n\n  return [RunningLayerCountProvider, usePreviousRunningLayerCount] as const;\n}\n\nconst Root = DismissableLayer;\n\nexport {\n  DismissableLayer,\n  //\n  Root,\n};\nexport type { DismissableLayerProps };\n"]},"metadata":{},"sourceType":"module"}