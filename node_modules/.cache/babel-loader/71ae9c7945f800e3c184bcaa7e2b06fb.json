{"ast":null,"code":"import _slicedToArray from \"/project/radix-windows-dropdown/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { observeElementRect as t } from \"@radix-ui/rect\";\nimport * as r from \"react\";\nexport function useRect(e) {\n  var _r$useState = r.useState(),\n      _r$useState2 = _slicedToArray(_r$useState, 2),\n      o = _r$useState2[0],\n      c = _r$useState2[1];\n\n  return r.useEffect(function () {\n    if (e) {\n      var _r = t(e, c);\n\n      return function () {\n        c(void 0), _r();\n      };\n    }\n  }, [e]), o;\n}","map":{"version":3,"sources":["packages/react/use-rect/src/useRect.tsx"],"names":["useRect","measurable","rect","setRect","React","useState","useEffect","unobserve","observeElementRect","undefined"],"mappings":";;;OASA,SAASA,OAAT,CAAiBC,CAAjB,EAAiBA;EACf,kBAAwBG,CAAAA,CAAMC,QAAND,EAAxB;EAAA;EAAA,IAAOF,CAAP;EAAA,IAAaC,CAAb;;EAWA,OAVAC,CAAAA,CAAME,SAANF,CAAgB,YAAA;IACd,IAAIH,CAAJ,EAAgB;MACd,IAAMM,EAAAA,GAAYC,CAAAA,CAAmBP,CAAnBO,EAA+BL,CAA/BK,CAAlB;;MACA,OAAO,YAAA;QACLL,CAAAA,CAAAA,KAAQM,CAARN,CAAAA,EACAI,EAAAA,EADAJ;MACAI,CAFF;IAEEA;EAAAA,CALNH,EASG,CAACH,CAAD,CATHG,GAUOF,CAAP;AAAOA","sourcesContent":["import * as React from 'react';\nimport { observeElementRect } from '@radix-ui/rect';\n\nimport type { Measurable } from '@radix-ui/rect';\n\n/**\n * Use this custom hook to get access to an element's rect (getBoundingClientRect)\n * and observe it along time.\n */\nfunction useRect(measurable: Measurable | null) {\n  const [rect, setRect] = React.useState<ClientRect>();\n  React.useEffect(() => {\n    if (measurable) {\n      const unobserve = observeElementRect(measurable, setRect);\n      return () => {\n        setRect(undefined);\n        unobserve();\n      };\n    }\n    return;\n  }, [measurable]);\n  return rect;\n}\n\nexport { useRect };\n"]},"metadata":{},"sourceType":"module"}