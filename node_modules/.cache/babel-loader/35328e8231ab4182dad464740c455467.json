{"ast":null,"code":"import _objectSpread from \"/project/radix-windows-dropdown/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/project/radix-windows-dropdown/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"/project/radix-windows-dropdown/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"__scopePopper\", \"virtualRef\"],\n    _excluded2 = [\"__scopePopper\", \"side\", \"sideOffset\", \"align\", \"alignOffset\", \"collisionTolerance\", \"avoidCollisions\"],\n    _excluded3 = [\"__scopePopper\", \"offset\"];\nimport * as e from \"@radix-ui/react-arrow\";\nimport { Primitive as o } from \"@radix-ui/react-primitive\";\nimport { useSize as r } from \"@radix-ui/react-use-size\";\nimport { useRect as t } from \"@radix-ui/react-use-rect\";\nimport { createContextScope as n } from \"@radix-ui/react-context\";\nimport { useComposedRefs as i } from \"@radix-ui/react-compose-refs\";\nimport { getPlacementData as p } from \"@radix-ui/popper\";\nimport * as s from \"react\";\nimport a from \"@babel/runtime/helpers/esm/extends\";\n\nvar _n = n(\"Popper\"),\n    _n2 = _slicedToArray(_n, 2),\n    c = _n2[0],\n    l = _n2[1];\n\nexport { l as createPopperScope };\n\nvar _c = c(\"Popper\"),\n    _c2 = _slicedToArray(_c, 2),\n    f = _c2[0],\n    d = _c2[1];\n\nexport var Popper = function Popper(e) {\n  var o = e.__scopePopper,\n      r = e.children,\n      _s$useState = s.useState(null),\n      _s$useState2 = _slicedToArray(_s$useState, 2),\n      t = _s$useState2[0],\n      n = _s$useState2[1];\n  /*#__PURE__*/\n\n\n  return s.createElement(f, {\n    scope: o,\n    anchor: t,\n    onAnchorChange: n\n  }, r);\n};\n/*#__PURE__*/\n\nexport var PopperAnchor = /*#__PURE__*/s.forwardRef(function (e, r) {\n  var t = e.__scopePopper,\n      n = e.virtualRef,\n      p = _objectWithoutProperties(e, _excluded),\n      c = d(\"PopperAnchor\", t),\n      l = s.useRef(null),\n      f = i(r, l);\n\n  return s.useEffect(function () {\n    c.onAnchorChange((null == n ? void 0 : n.current) || l.current);\n  }), n ? null : /*#__PURE__*/s.createElement(o.div, a({}, p, {\n    ref: f\n  }));\n});\n/*#__PURE__*/\n\nvar _c3 = c(\"PopperContent\"),\n    _c4 = _slicedToArray(_c3, 2),\n    u = _c4[0],\n    m = _c4[1];\n\nexport var PopperContent = /*#__PURE__*/s.forwardRef(function (e, n) {\n  var c = e.__scopePopper,\n      _e$side = e.side,\n      l = _e$side === void 0 ? \"bottom\" : _e$side,\n      f = e.sideOffset,\n      _e$align = e.align,\n      m = _e$align === void 0 ? \"center\" : _e$align,\n      w = e.alignOffset,\n      h = e.collisionTolerance,\n      _e$avoidCollisions = e.avoidCollisions,\n      x = _e$avoidCollisions === void 0 ? !0 : _e$avoidCollisions,\n      v = _objectWithoutProperties(e, _excluded2),\n      P = d(\"PopperContent\", c),\n      _s$useState3 = s.useState(),\n      _s$useState4 = _slicedToArray(_s$useState3, 2),\n      A = _s$useState4[0],\n      g = _s$useState4[1],\n      E = t(P.anchor),\n      _s$useState5 = s.useState(null),\n      _s$useState6 = _slicedToArray(_s$useState5, 2),\n      y = _s$useState6[0],\n      C = _s$useState6[1],\n      S = r(y),\n      _s$useState7 = s.useState(null),\n      _s$useState8 = _slicedToArray(_s$useState7, 2),\n      R = _s$useState8[0],\n      O = _s$useState8[1],\n      _ = r(R),\n      b = i(n, function (e) {\n    return C(e);\n  }),\n      z = function () {\n    var _s$useState9 = s.useState(void 0),\n        _s$useState10 = _slicedToArray(_s$useState9, 2),\n        e = _s$useState10[0],\n        o = _s$useState10[1];\n\n    return s.useEffect(function () {\n      var e;\n\n      function r() {\n        o({\n          width: window.innerWidth,\n          height: window.innerHeight\n        });\n      }\n\n      function t() {\n        window.clearTimeout(e), e = window.setTimeout(r, 100);\n      }\n\n      return r(), window.addEventListener(\"resize\", t), function () {\n        return window.removeEventListener(\"resize\", t);\n      };\n    }, []), e;\n  }(),\n      T = z ? DOMRect.fromRect(_objectSpread(_objectSpread({}, z), {}, {\n    x: 0,\n    y: 0\n  })) : void 0,\n      _p = p({\n    anchorRect: E,\n    popperSize: S,\n    arrowSize: _,\n    arrowOffset: A,\n    side: l,\n    sideOffset: f,\n    align: m,\n    alignOffset: w,\n    shouldAvoidCollisions: x,\n    collisionBoundariesRect: T,\n    collisionTolerance: h\n  }),\n      k = _p.popperStyles,\n      L = _p.arrowStyles,\n      B = _p.placedSide,\n      D = _p.placedAlign,\n      H = void 0 !== B;\n  /*#__PURE__*/\n\n\n  return s.createElement(\"div\", {\n    style: k,\n    \"data-radix-popper-content-wrapper\": \"\"\n  }, /*#__PURE__*/s.createElement(u, {\n    scope: c,\n    arrowStyles: L,\n    onArrowChange: O,\n    onArrowOffsetChange: g\n  }, /*#__PURE__*/s.createElement(o.div, a({\n    \"data-side\": B,\n    \"data-align\": D\n  }, v, {\n    style: _objectSpread(_objectSpread({}, v.style), {}, {\n      animation: H ? void 0 : \"none\"\n    }),\n    ref: b\n  }))));\n});\n/*#__PURE__*/\n\nexport var PopperArrow = /*#__PURE__*/s.forwardRef(function (o, r) {\n  var t = o.__scopePopper,\n      n = o.offset,\n      i = _objectWithoutProperties(o, _excluded3),\n      p = m(\"PopperArrow\", t),\n      c = p.onArrowOffsetChange;\n\n  return s.useEffect(function () {\n    return c(n);\n  }, [c, n]), /*#__PURE__*/s.createElement(\"span\", {\n    style: _objectSpread(_objectSpread({}, p.arrowStyles), {}, {\n      pointerEvents: \"none\"\n    })\n  }, /*#__PURE__*/s.createElement(\"span\", {\n    ref: p.onArrowChange,\n    style: {\n      display: \"inline-block\",\n      verticalAlign: \"top\",\n      pointerEvents: \"auto\"\n    }\n  }, /*#__PURE__*/s.createElement(e.Root, a({}, i, {\n    ref: r,\n    style: _objectSpread(_objectSpread({}, i.style), {}, {\n      display: \"block\"\n    })\n  }))));\n});\n/*#__PURE__*/\n\nexport var Root = Popper;\nexport var Anchor = PopperAnchor;\nexport var Content = PopperContent;\nexport var Arrow = PopperArrow;","map":{"version":3,"sources":["packages/react/popper/src/Popper.tsx"],"names":["createPopperContext","createPopperScope","createContextScope","PopperProvider","usePopperContext","Popper","props","__scopePopper","children","anchor","setAnchor","React","useState","_react","$d4fb2a15a6483a4f85af0f96fd68687d$var$PopperProvider","scope","onAnchorChange","PopperAnchor","forwardRef","forwardedRef","virtualRef","anchorProps","context","ref","useRef","composedRefs","useComposedRefs","useEffect","current","Primitive","div","PopperContentProvider","useContentContext","PopperContent","side","sideOffset","align","alignOffset","collisionTolerance","avoidCollisions","contentProps","arrowOffset","setArrowOffset","anchorRect","useRect","content","setContent","contentSize","useSize","arrow","setArrow","arrowSize","node","windowSize","useWindowSize","collisionBoundariesRect","DOMRect","fromRect","x","y","undefined","popperStyles","arrowStyles","placedSide","placedAlign","getPlacementData","popperSize","shouldAvoidCollisions","isPlaced","style","$d4fb2a15a6483a4f85af0f96fd68687d$var$PopperContentProvider","onArrowChange","onArrowOffsetChange","animation","PopperArrow","offset","arrowProps","pointerEvents","display","verticalAlign","_radixUiReactArrow","Root","setWindowSize","debounceTimerId","updateWindowSize","width","window","innerWidth","height","innerHeight","handleResize","clearTimeout","setTimeout","addEventListener","removeEventListener","Anchor","Content","Arrow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { getPlacementData } from '@radix-ui/popper';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useRect } from '@radix-ui/react-use-rect';\nimport { useSize } from '@radix-ui/react-use-size';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as ArrowPrimitive from '@radix-ui/react-arrow';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\nimport type { Side, Align } from '@radix-ui/popper';\nimport type { Measurable } from '@radix-ui/rect';\n\n/* -------------------------------------------------------------------------------------------------\n * Popper\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_NAME = 'Popper';\n\ntype ScopedProps<P> = P & { __scopePopper?: Scope };\nconst [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);\n\ntype PopperContextValue = {\n  anchor: Measurable | null;\n  onAnchorChange(anchor: Measurable | null): void;\n};\nconst [PopperProvider, usePopperContext] = createPopperContext<PopperContextValue>(POPPER_NAME);\n\ninterface PopperProps {\n  children?: React.ReactNode;\n}\nconst Popper: React.FC<PopperProps> = (props: ScopedProps<PopperProps>) => {\n  const { __scopePopper, children } = props;\n  const [anchor, setAnchor] = React.useState<Measurable | null>(null);\n  return (\n    <PopperProvider scope={__scopePopper} anchor={anchor} onAnchorChange={setAnchor}>\n      {children}\n    </PopperProvider>\n  );\n};\n\nPopper.displayName = POPPER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopperAnchor';\n\ntype PopperAnchorElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PopperAnchorProps extends PrimitiveDivProps {\n  virtualRef?: React.RefObject<Measurable>;\n}\n\nconst PopperAnchor = React.forwardRef<PopperAnchorElement, PopperAnchorProps>(\n  (props: ScopedProps<PopperAnchorProps>, forwardedRef) => {\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = React.useRef<PopperAnchorElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    React.useEffect(() => {\n      // Consumer can anchor the popper to something that isn't\n      // a DOM node e.g. pointer position, so we override the\n      // `anchorRef` with their virtual ref in this case.\n      context.onAnchorChange(virtualRef?.current || ref.current);\n    });\n\n    return virtualRef ? null : <Primitive.div {...anchorProps} ref={composedRefs} />;\n  }\n);\n\nPopperAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopperContent';\n\ntype PopperContentContextValue = {\n  arrowStyles: React.CSSProperties;\n  onArrowChange(arrow: HTMLSpanElement | null): void;\n  onArrowOffsetChange(offset?: number): void;\n};\n\nconst [PopperContentProvider, useContentContext] =\n  createPopperContext<PopperContentContextValue>(CONTENT_NAME);\n\ntype PopperContentElement = React.ElementRef<typeof Primitive.div>;\ninterface PopperContentProps extends PrimitiveDivProps {\n  side?: Side;\n  sideOffset?: number;\n  align?: Align;\n  alignOffset?: number;\n  collisionTolerance?: number;\n  avoidCollisions?: boolean;\n}\n\nconst PopperContent = React.forwardRef<PopperContentElement, PopperContentProps>(\n  (props: ScopedProps<PopperContentProps>, forwardedRef) => {\n    const {\n      __scopePopper,\n      side = 'bottom',\n      sideOffset,\n      align = 'center',\n      alignOffset,\n      collisionTolerance,\n      avoidCollisions = true,\n      ...contentProps\n    } = props;\n\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n    const [arrowOffset, setArrowOffset] = React.useState<number>();\n    const anchorRect = useRect(context.anchor);\n    const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n    const contentSize = useSize(content);\n    const [arrow, setArrow] = React.useState<HTMLSpanElement | null>(null);\n    const arrowSize = useSize(arrow);\n\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n\n    const windowSize = useWindowSize();\n    const collisionBoundariesRect = windowSize\n      ? DOMRect.fromRect({ ...windowSize, x: 0, y: 0 })\n      : undefined;\n\n    const { popperStyles, arrowStyles, placedSide, placedAlign } = getPlacementData({\n      anchorRect,\n      popperSize: contentSize,\n      arrowSize,\n\n      // config\n      arrowOffset,\n      side,\n      sideOffset,\n      align,\n      alignOffset,\n      shouldAvoidCollisions: avoidCollisions,\n      collisionBoundariesRect,\n      collisionTolerance,\n    });\n    const isPlaced = placedSide !== undefined;\n\n    return (\n      <div style={popperStyles} data-radix-popper-content-wrapper=\"\">\n        <PopperContentProvider\n          scope={__scopePopper}\n          arrowStyles={arrowStyles}\n          onArrowChange={setArrow}\n          onArrowOffsetChange={setArrowOffset}\n        >\n          <Primitive.div\n            data-side={placedSide}\n            data-align={placedAlign}\n            {...contentProps}\n            style={{\n              ...contentProps.style,\n              // if the PopperContent hasn't been placed yet (not all measurements done)\n              // we prevent animations so that users's animation don't kick in too early referring wrong sides\n              animation: !isPlaced ? 'none' : undefined,\n            }}\n            ref={composedRefs}\n          />\n        </PopperContentProvider>\n      </div>\n    );\n  }\n);\n\nPopperContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopperArrow';\n\ntype PopperArrowElement = React.ElementRef<typeof ArrowPrimitive.Root>;\ntype ArrowProps = Radix.ComponentPropsWithoutRef<typeof ArrowPrimitive.Root>;\ninterface PopperArrowProps extends ArrowProps {\n  offset?: number;\n}\n\nconst PopperArrow = React.forwardRef<PopperArrowElement, PopperArrowProps>(function PopperArrow(\n  props: ScopedProps<PopperArrowProps>,\n  forwardedRef\n) {\n  const { __scopePopper, offset, ...arrowProps } = props;\n  const context = useContentContext(ARROW_NAME, __scopePopper);\n  const { onArrowOffsetChange } = context;\n\n  // send the Arrow's offset up to Popper\n  React.useEffect(() => onArrowOffsetChange(offset), [onArrowOffsetChange, offset]);\n\n  return (\n    <span style={{ ...context.arrowStyles, pointerEvents: 'none' }}>\n      <span\n        // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n        // doesn't report size as we'd expect on SVG elements.\n        // it reports their bounding box which is effectively the largest path inside the SVG.\n        ref={context.onArrowChange}\n        style={{\n          display: 'inline-block',\n          verticalAlign: 'top',\n          pointerEvents: 'auto',\n        }}\n      >\n        <ArrowPrimitive.Root\n          {...arrowProps}\n          ref={forwardedRef}\n          style={{\n            ...arrowProps.style,\n            // ensures the element can be measured correctly (mostly for if SVG)\n            display: 'block',\n          }}\n        />\n      </span>\n    </span>\n  );\n});\n\nPopperArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst WINDOW_RESIZE_DEBOUNCE_WAIT_IN_MS = 100;\n\nfunction useWindowSize() {\n  const [windowSize, setWindowSize] = React.useState<{ width: number; height: number } | undefined>(\n    undefined\n  );\n\n  React.useEffect(() => {\n    let debounceTimerId: number;\n\n    function updateWindowSize() {\n      setWindowSize({ width: window.innerWidth, height: window.innerHeight });\n    }\n\n    function handleResize() {\n      window.clearTimeout(debounceTimerId);\n      debounceTimerId = window.setTimeout(updateWindowSize, WINDOW_RESIZE_DEBOUNCE_WAIT_IN_MS);\n    }\n\n    updateWindowSize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowSize;\n}\n\nconst Root = Popper;\nconst Anchor = PopperAnchor;\nconst Content = PopperContent;\nconst Arrow = PopperArrow;\n\nexport {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n};\nexport type { PopperProps, PopperAnchorProps, PopperContentProps, PopperArrowProps };\n"]},"metadata":{},"sourceType":"module"}