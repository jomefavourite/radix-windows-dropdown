{"ast":null,"code":"import _slicedToArray from \"/project/radix-windows-dropdown/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useLayoutEffect as e } from \"@radix-ui/react-use-layout-effect\";\nimport { useComposedRefs as n } from \"@radix-ui/react-compose-refs\";\nimport * as t from \"react\";\nexport var Presence = function Presence(u) {\n  var o = u.present,\n      i = u.children,\n      s = function (n) {\n    var _t$useState = t.useState(),\n        _t$useState2 = _slicedToArray(_t$useState, 2),\n        u = _t$useState2[0],\n        o = _t$useState2[1],\n        i = t.useRef({}),\n        s = t.useRef(n),\n        c = t.useRef(\"none\"),\n        a = n ? \"mounted\" : \"unmounted\",\n        _ref = function (e, n) {\n      return t.useReducer(function (e, t) {\n        var r = n[e][t];\n        return null != r ? r : e;\n      }, e);\n    }(a, {\n      mounted: {\n        UNMOUNT: \"unmounted\",\n        ANIMATION_OUT: \"unmountSuspended\"\n      },\n      unmountSuspended: {\n        MOUNT: \"mounted\",\n        ANIMATION_END: \"unmounted\"\n      },\n      unmounted: {\n        MOUNT: \"mounted\"\n      }\n    }),\n        _ref2 = _slicedToArray(_ref, 2),\n        d = _ref2[0],\n        m = _ref2[1];\n\n    return t.useEffect(function () {\n      var e = r(i.current);\n      c.current = \"mounted\" === d ? e : \"none\";\n    }, [d]), e(function () {\n      var e = i.current,\n          t = s.current;\n\n      if (t !== n) {\n        var _u = c.current,\n            _o = r(e);\n\n        if (n) m(\"MOUNT\");else if (\"none\" === _o || \"none\" === (null == e ? void 0 : e.display)) m(\"UNMOUNT\");else {\n          var _e = _u !== _o;\n\n          m(t && _e ? \"ANIMATION_OUT\" : \"UNMOUNT\");\n        }\n        s.current = n;\n      }\n    }, [n, m]), e(function () {\n      if (u) {\n        var _e2 = function _e2(e) {\n          var n = r(i.current).includes(e.animationName);\n          e.target === u && n && m(\"ANIMATION_END\");\n        },\n            _n = function _n(e) {\n          e.target === u && (c.current = r(i.current));\n        };\n\n        return u.addEventListener(\"animationstart\", _n), u.addEventListener(\"animationcancel\", _e2), u.addEventListener(\"animationend\", _e2), function () {\n          u.removeEventListener(\"animationstart\", _n), u.removeEventListener(\"animationcancel\", _e2), u.removeEventListener(\"animationend\", _e2);\n        };\n      }\n    }, [u, m]), {\n      isPresent: [\"mounted\", \"unmountSuspended\"].includes(d),\n      ref: t.useCallback(function (e) {\n        e && (i.current = getComputedStyle(e)), o(e);\n      }, [])\n    };\n  }(o),\n      c = \"function\" == typeof i ? i({\n    present: s.isPresent\n  }) : t.Children.only(i),\n      a = n(s.ref, c.ref);\n\n  return \"function\" == typeof i || s.isPresent ? /*#__PURE__*/t.cloneElement(c, {\n    ref: a\n  }) : null;\n};\n\nfunction r(e) {\n  return (null == e ? void 0 : e.animationName) || \"none\";\n}\n\nPresence.displayName = \"Presence\";","map":{"version":3,"sources":["packages/react/presence/src/Presence.tsx","packages/react/presence/src/useStateMachine.tsx"],"names":["Presence","props","present","children","presence","usePresence","child","isPresent","React","Children","only","ref","useComposedRefs","cloneElement","displayName","node","setNode","useState","stylesRef","useRef","prevPresentRef","prevAnimationNameRef","initialState","state","send","$d88c0747af12355025ed3195fb48c68a$export$useStateMachine","mounted","UNMOUNT","ANIMATION_OUT","unmountSuspended","MOUNT","ANIMATION_END","unmounted","useEffect","currentAnimationName","getAnimationName","current","useLayoutEffect","styles","wasPresent","prevAnimationName","display","isAnimating","handleAnimationEnd","event","isCurrentAnimation","includes","animationName","target","handleAnimationStart","addEventListener","removeEventListener","useCallback","getComputedStyle","machine","useReducer","nextState"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useStateMachine } from './useStateMachine';\n\ninterface PresenceProps {\n  present: boolean;\n  children: React.ReactElement | ((props: { present: boolean }) => React.ReactElement);\n}\n\nconst Presence: React.FC<PresenceProps> = (props) => {\n  const { present, children } = props;\n  const presence = usePresence(present);\n\n  const child = (\n    typeof children === 'function'\n      ? children({ present: presence.isPresent })\n      : React.Children.only(children)\n  ) as React.ReactElement;\n\n  const ref = useComposedRefs(presence.ref, (child as any).ref);\n  const forceMount = typeof children === 'function';\n  return forceMount || presence.isPresent ? React.cloneElement(child, { ref }) : null;\n};\n\nPresence.displayName = 'Presence';\n\n/* -------------------------------------------------------------------------------------------------\n * usePresence\n * -----------------------------------------------------------------------------------------------*/\n\nfunction usePresence(present: boolean) {\n  const [node, setNode] = React.useState<HTMLElement>();\n  const stylesRef = React.useRef<CSSStyleDeclaration>({} as any);\n  const prevPresentRef = React.useRef(present);\n  const prevAnimationNameRef = React.useRef<string>('none');\n  const initialState = present ? 'mounted' : 'unmounted';\n  const [state, send] = useStateMachine(initialState, {\n    mounted: {\n      UNMOUNT: 'unmounted',\n      ANIMATION_OUT: 'unmountSuspended',\n    },\n    unmountSuspended: {\n      MOUNT: 'mounted',\n      ANIMATION_END: 'unmounted',\n    },\n    unmounted: {\n      MOUNT: 'mounted',\n    },\n  });\n\n  React.useEffect(() => {\n    const currentAnimationName = getAnimationName(stylesRef.current);\n    prevAnimationNameRef.current = state === 'mounted' ? currentAnimationName : 'none';\n  }, [state]);\n\n  useLayoutEffect(() => {\n    const styles = stylesRef.current;\n    const wasPresent = prevPresentRef.current;\n    const hasPresentChanged = wasPresent !== present;\n\n    if (hasPresentChanged) {\n      const prevAnimationName = prevAnimationNameRef.current;\n      const currentAnimationName = getAnimationName(styles);\n\n      if (present) {\n        send('MOUNT');\n      } else if (currentAnimationName === 'none' || styles?.display === 'none') {\n        // If there is no exit animation or the element is hidden, animations won't run\n        // so we unmount instantly\n        send('UNMOUNT');\n      } else {\n        /**\n         * When `present` changes to `false`, we check changes to animation-name to\n         * determine whether an animation has started. We chose this approach (reading\n         * computed styles) because there is no `animationrun` event and `animationstart`\n         * fires after `animation-delay` has expired which would be too late.\n         */\n        const isAnimating = prevAnimationName !== currentAnimationName;\n\n        if (wasPresent && isAnimating) {\n          send('ANIMATION_OUT');\n        } else {\n          send('UNMOUNT');\n        }\n      }\n\n      prevPresentRef.current = present;\n    }\n  }, [present, send]);\n\n  useLayoutEffect(() => {\n    if (node) {\n      /**\n       * Triggering an ANIMATION_OUT during an ANIMATION_IN will fire an `animationcancel`\n       * event for ANIMATION_IN after we have entered `unmountSuspended` state. So, we\n       * make sure we only trigger ANIMATION_END for the currently active animation.\n       */\n      const handleAnimationEnd = (event: AnimationEvent) => {\n        const currentAnimationName = getAnimationName(stylesRef.current);\n        const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n        if (event.target === node && isCurrentAnimation) {\n          send('ANIMATION_END');\n        }\n      };\n      const handleAnimationStart = (event: AnimationEvent) => {\n        if (event.target === node) {\n          // if animation occurred, store its name as the previous animation.\n          prevAnimationNameRef.current = getAnimationName(stylesRef.current);\n        }\n      };\n      node.addEventListener('animationstart', handleAnimationStart);\n      node.addEventListener('animationcancel', handleAnimationEnd);\n      node.addEventListener('animationend', handleAnimationEnd);\n      return () => {\n        node.removeEventListener('animationstart', handleAnimationStart);\n        node.removeEventListener('animationcancel', handleAnimationEnd);\n        node.removeEventListener('animationend', handleAnimationEnd);\n      };\n    }\n  }, [node, send]);\n\n  return {\n    isPresent: ['mounted', 'unmountSuspended'].includes(state),\n    ref: React.useCallback((node: HTMLElement) => {\n      if (node) stylesRef.current = getComputedStyle(node);\n      setNode(node);\n    }, []),\n  };\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getAnimationName(styles?: CSSStyleDeclaration) {\n  return styles?.animationName || 'none';\n}\n\nexport { Presence };\nexport type { PresenceProps };\n","import * as React from 'react';\n\ntype Machine<S> = { [k: string]: { [k: string]: S } };\ntype MachineState<T> = keyof T;\ntype MachineEvent<T> = keyof UnionToIntersection<T[keyof T]>;\n\n// 🤯 https://fettblog.eu/typescript-union-to-intersection/\ntype UnionToIntersection<T> = (T extends any ? (x: T) => any : never) extends (x: infer R) => any\n  ? R\n  : never;\n\nexport function useStateMachine<M>(\n  initialState: MachineState<M>,\n  machine: M & Machine<MachineState<M>>\n) {\n  return React.useReducer((state: MachineState<M>, event: MachineEvent<M>): MachineState<M> => {\n    const nextState = (machine[state] as any)[event];\n    return nextState ?? state;\n  }, initialState);\n}\n"]},"metadata":{},"sourceType":"module"}